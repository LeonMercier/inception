# TODO: volumes have to be in /home/lemercie/data

volumes:

  mariadb:
    name: mariadb
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/data/dockervolumes/mariadb

  wordpress:
    name: wordpress
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/data/dockervolumes/wordpress

networks:
  dockernet:
    driver: bridge

secrets:
  db_user_pw:
    file: secrets/db_user_pw.txt
  db_root_pw:
    file: secrets/db_root_pw.txt
  wp_user_pw:
    file: secrets/wp_user_pw.txt
  wp_root_pw:
    file: secrets/wp_root_pw.txt


services:

  mariadb:
    init: true
    build: ./requirements/mariadb/
    container_name: mariadb
    image: mariadb
    pull_policy: build
    env_file: "./.env"
    restart: unless-stopped
    networks:
      - dockernet
    volumes:
      - mariadb:/var/lib/mariadb
    # CMD-SHELL is used so that we get variable expansion
    # double dollar sign so that the variable doesnt get expanded here but in
    # the container shell
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping --host=127.0.0.1 --protocol=tcp" ]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 5m
      start_interval: 5s
    secrets:
      - db_user_pw
      - db_root_pw


  wordpress:
    init: true
    build:
      context: ./requirements/wordpress/
      args:
        WEB_USER: ${WEB_USER}
        WEB_GROUP: ${WEB_GROUP}
    container_name: wordpress
    image: wordpress
    pull_policy: build
    # stuff in the file pointed by 'env_file' is available during container 
    # runtime, NOT during build time, i.e. in the Dockerfile
    # hence we use ARGS
    # but the wy we use ARGS only works if there is a file called ".env" in the
    # same dir as the compose file, NOT with an arbitrary env_file
    # what a mess
    env_file: ".env"
    restart: unless-stopped
    networks:
      - dockernet
    volumes:
      - wordpress:/usr/share/webapps/wordpress
    depends_on:
      mariadb: 
        condition: service_healthy
    secrets:
      - db_user_pw
      - wp_user_pw
      - wp_root_pw

  nginx:
    init: true
    build:
      context: ./requirements/nginx/
      args:
        WEB_USER: ${WEB_USER}
        WEB_GROUP: ${WEB_GROUP}
    container_name: nginx
    image: nginx
    pull_policy: build
    env_file: ".env"
    restart: unless-stopped
    networks:
      - dockernet
    volumes:
      - wordpress:/usr/share/webapps/wordpress
    depends_on:
      - wordpress
    # the only exposed port in the whole thing
    # has to be quoted to avoid conflict with YAML base-60 format
    ports:
      - "443:443" 
